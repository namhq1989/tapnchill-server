version: '3'

tasks:
  # run server
  run:
    cmds:
      - doppler run -- go run cmd/*.go

  # mandatory tools for code generation
  install-tools:
    cmds:
      - echo "installing tools"
      - go install google.golang.org/protobuf/cmd/protoc-gen-go
      - go install google.golang.org/grpc/cmd/protoc-gen-go-grpc
      - go install github.com/jackc/tern/v2@latest
      - go install github.com/swaggo/swag/cmd/swag@latest
      - echo "done"

  # code generation
  code-gen:
    cmds:
      - echo "running code generation"
      - rm -rf internal/genproto
      - go generate ./...
      - echo "done"

  # mock generation
  mock-gen:
    cmds:
      - rm -rf internal/mock

      # common
      - mockgen -source=pkg/common/domain/feedback.go -destination=internal/mock/common/feedback.go -package=mockcommon

  # test
  test:
    dotenv: ['.env.test']
    cmds:
      - gotestsum --junitfile-hide-empty-pkg --format testname ./pkg/...


  # test with coverage
  test-coverage:
    dotenv: ['.env.test']
    cmds:
      - gotestsum --format testname -- -coverprofile=coverrage.out ./pkg/... && \
      - go tool cover -html=coverrage.out -o coverage.html

  # test with debug
  test-debug:
    dotenv: ['.env.test']
    cmds:
      - go test -v ./pkg/...

