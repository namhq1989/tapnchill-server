version: '3'

tasks:
  # run server
  run:
    cmds:
      - doppler run -- go run cmd/*.go

  build:
    cmds:
      - docker build -f cmd/Dockerfile -t namhq1989/bapbi-server:latest -t namhq1989/bapbi-server:$(git rev-parse --short HEAD) .
      - docker push namhq1989/bapbi-server:latest
      - docker push namhq1989/bapbi-server:$(git rev-parse --short HEAD)

  # mandatory tools for code generation
  install-tools:
    cmds:
      - echo "installing tools"
      - go install google.golang.org/protobuf/cmd/protoc-gen-go
      - go install google.golang.org/grpc/cmd/protoc-gen-go-grpc
      - go install github.com/jackc/tern/v2@latest
      - go install github.com/swaggo/swag/cmd/swag@latest
      - echo "done"

  # code generation
  code-gen:
    cmds:
      - echo "running code generation"
      - rm -rf internal/genproto
      - go generate ./...
      - echo "done"

  # mock generation
  mock-gen:
    cmds:
      - rm -rf internal/mock

      # common
      - mockgen -source=pkg/common/domain/feedback.go -destination=internal/mock/common/feedback.go -package=mockcommon
      - mockgen -source=pkg/common/domain/quote.go -destination=internal/mock/common/quote.go -package=mockcommon
      - mockgen -source=pkg/common/domain/caching.go -destination=internal/mock/common/caching.go -package=mockcommon
      - mockgen -source=pkg/common/domain/external_api.go -destination=internal/mock/common/external_api.go -package=mockcommon
      - mockgen -source=pkg/common/domain/service.go -destination=internal/mock/common/service.go -package=mockcommon

      # task
      - mockgen -source=pkg/task/domain/goal.go -destination=internal/mock/task/goal.go -package=mocktask
      - mockgen -source=pkg/task/domain/task.go -destination=internal/mock/task/task.go -package=mocktask
      - mockgen -source=pkg/task/domain/service.go -destination=internal/mock/task/service.go -package=mocktask
      - mockgen -source=pkg/task/domain/user.go -destination=internal/mock/task/user.go -package=mocktask

      # habit
      - mockgen -source=pkg/habit/domain/habit.go -destination=internal/mock/habit/habit.go -package=mockhabit
      - mockgen -source=pkg/habit/domain/habit_completion.go -destination=internal/mock/habit/habit_completion.go -package=mockhabit
      - mockgen -source=pkg/habit/domain/habit_daily_stats.go -destination=internal/mock/habit/habit_daily_stats.go -package=mockhabit
      - mockgen -source=pkg/habit/domain/caching.go -destination=internal/mock/habit/caching.go -package=mockhabit
      - mockgen -source=pkg/habit/domain/service.go -destination=internal/mock/habit/service.go -package=mockhabit
      - mockgen -source=pkg/habit/domain/user.go -destination=internal/mock/habit/user.go -package=mockhabit

      # user
      - mockgen -source=pkg/user/domain/user.go -destination=internal/mock/user/user.go -package=mockuser
      - mockgen -source=pkg/user/domain/subscription_history.go -destination=internal/mock/user/subscription_history.go -package=mockuser
      - mockgen -source=pkg/user/domain/jwt.go -destination=internal/mock/user/jwt.go -package=mockuser
      - mockgen -source=pkg/user/domain/sso.go -destination=internal/mock/user/sso.go -package=mockuser
      - mockgen -source=pkg/user/domain/queue.go -destination=internal/mock/user/queue.go -package=mockuser
      - mockgen -source=pkg/user/domain/external_api.go -destination=internal/mock/user/external_api.go -package=mockuser
      - mockgen -source=pkg/user/domain/caching.go -destination=internal/mock/user/caching.go -package=mockuser
      - mockgen -source=pkg/user/domain/service.go -destination=internal/mock/user/service.go -package=mockuser

      # note
      - mockgen -source=pkg/note/domain/note.go -destination=internal/mock/note/note.go -package=mocknote
      - mockgen -source=pkg/note/domain/user.go -destination=internal/mock/note/user.go -package=mocknote

      # qr code
      - mockgen -source=pkg/qrcode/domain/qrcode.go -destination=internal/mock/qrcode/qrcode.go -package=mockqrcode
      - mockgen -source=pkg/qrcode/domain/user.go -destination=internal/mock/qrcode/user.go -package=mockqrcode

  # test
  test:
    dotenv: ['.env.test']
    cmds:
      - gotestsum --junitfile-hide-empty-pkg --format testname ./pkg/...


  # test with coverage
  test-coverage:
    dotenv: ['.env.test']
    cmds:
      - gotestsum --format testname -- -coverprofile=coverrage.out ./pkg/... && \
      - go tool cover -html=coverrage.out -o coverage.html

  # test with debug
  test-debug:
    dotenv: ['.env.test']
    cmds:
      - go test -v ./pkg/...

