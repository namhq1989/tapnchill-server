// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/common/domain/service.go
//
// Generated by this command:
//
//	mockgen -source=pkg/common/domain/service.go -destination=internal/mock/common/service.go -package=mockcommon
//

// Package mockcommon is a generated GoMock package.
package mockcommon

import (
	reflect "reflect"

	appcontext "github.com/namhq1989/go-utilities/appcontext"
	domain "github.com/namhq1989/tapnchill-server/pkg/common/domain"
	gomock "go.uber.org/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// GetCityWeather mocks base method.
func (m *MockService) GetCityWeather(ctx *appcontext.AppContext, city string) (*domain.Weather, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCityWeather", ctx, city)
	ret0, _ := ret[0].(*domain.Weather)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCityWeather indicates an expected call of GetCityWeather.
func (mr *MockServiceMockRecorder) GetCityWeather(ctx, city any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCityWeather", reflect.TypeOf((*MockService)(nil).GetCityWeather), ctx, city)
}

// GetIpCity mocks base method.
func (m *MockService) GetIpCity(ctx *appcontext.AppContext, ip string) (*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIpCity", ctx, ip)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIpCity indicates an expected call of GetIpCity.
func (mr *MockServiceMockRecorder) GetIpCity(ctx, ip any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIpCity", reflect.TypeOf((*MockService)(nil).GetIpCity), ctx, ip)
}
