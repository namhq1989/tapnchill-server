// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/qrcode/domain/user.go
//
// Generated by this command:
//
//	mockgen -source=pkg/qrcode/domain/user.go -destination=internal/mock/qrcode/user.go -package=mockqrcode
//

// Package mockqrcode is a generated GoMock package.
package mockqrcode

import (
	reflect "reflect"

	appcontext "github.com/namhq1989/go-utilities/appcontext"
	gomock "go.uber.org/mock/gomock"
)

// MockUserHub is a mock of UserHub interface.
type MockUserHub struct {
	ctrl     *gomock.Controller
	recorder *MockUserHubMockRecorder
}

// MockUserHubMockRecorder is the mock recorder for MockUserHub.
type MockUserHubMockRecorder struct {
	mock *MockUserHub
}

// NewMockUserHub creates a new mock instance.
func NewMockUserHub(ctrl *gomock.Controller) *MockUserHub {
	mock := &MockUserHub{ctrl: ctrl}
	mock.recorder = &MockUserHubMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserHub) EXPECT() *MockUserHubMockRecorder {
	return m.recorder
}

// GetQRCodeQuota mocks base method.
func (m *MockUserHub) GetQRCodeQuota(ctx *appcontext.AppContext, userID string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetQRCodeQuota", ctx, userID)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetQRCodeQuota indicates an expected call of GetQRCodeQuota.
func (mr *MockUserHubMockRecorder) GetQRCodeQuota(ctx, userID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetQRCodeQuota", reflect.TypeOf((*MockUserHub)(nil).GetQRCodeQuota), ctx, userID)
}
