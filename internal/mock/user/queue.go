// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/user/domain/queue.go
//
// Generated by this command:
//
//	mockgen -source=pkg/user/domain/queue.go -destination=internal/mock/user/queue.go -package=mockuser
//

// Package mockuser is a generated GoMock package.
package mockuser

import (
	reflect "reflect"

	appcontext "github.com/namhq1989/go-utilities/appcontext"
	domain "github.com/namhq1989/tapnchill-server/pkg/user/domain"
	gomock "go.uber.org/mock/gomock"
)

// MockQueueRepository is a mock of QueueRepository interface.
type MockQueueRepository struct {
	ctrl     *gomock.Controller
	recorder *MockQueueRepositoryMockRecorder
}

// MockQueueRepositoryMockRecorder is the mock recorder for MockQueueRepository.
type MockQueueRepositoryMockRecorder struct {
	mock *MockQueueRepository
}

// NewMockQueueRepository creates a new mock instance.
func NewMockQueueRepository(ctrl *gomock.Controller) *MockQueueRepository {
	mock := &MockQueueRepository{ctrl: ctrl}
	mock.recorder = &MockQueueRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockQueueRepository) EXPECT() *MockQueueRepositoryMockRecorder {
	return m.recorder
}

// CreateUserDefaultGoal mocks base method.
func (m *MockQueueRepository) CreateUserDefaultGoal(ctx *appcontext.AppContext, payload domain.QueueCreateUserDefaultGoalPayload) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserDefaultGoal", ctx, payload)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUserDefaultGoal indicates an expected call of CreateUserDefaultGoal.
func (mr *MockQueueRepositoryMockRecorder) CreateUserDefaultGoal(ctx, payload any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserDefaultGoal", reflect.TypeOf((*MockQueueRepository)(nil).CreateUserDefaultGoal), ctx, payload)
}
